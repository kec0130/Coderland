stages:
  - staging-frontend
  - staging-backend

staging-frontend:
  image: node:latest
  stage: staging-frontend
  only:
    - Frontend-Sprint
  before_script:
    # Setup ssh
    - eval $(ssh-agent -s)
    - echo "$SSH_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -p "$STAGING_SERVER_PORT" $STAGING_SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    # Checkout to Frontend-Sprint
    - git fetch origin
    - git checkout Frontend-Sprint
    - git pull origin Frontend-Sprint
    # Install npm dependencies
    - cd frontend
    - npm ci
  script:
    # Build
    - npm run stage-build
    # Send dist folder via scp
    - scp -P "$STAGING_SERVER_PORT" -r dist "$STAGING_SERVER_USER"@"$STAGING_SERVER_IP":/var/www
    # Run bash script
    - ssh -p "$STAGING_SERVER_PORT" "$STAGING_SERVER_USER"@"$STAGING_SERVER_IP" "cd /var/www; bash start.sh"

staging-backend:
  stage: staging-backend
  only:
    - Backend-Sprint
  before_script:
    # Setup ssh
    - "command -v ssh-agent >/dev/null || ( apk add --update openssh )"
    - eval $(ssh-agent -s)
    - echo "$SSH_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -p "$STAGING_SERVER_PORT" $STAGING_SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh -p "$STAGING_SERVER_PORT" "$STAGING_SERVER_USER"@"$STAGING_SERVER_IP" "cd ~/elice-project; bash start.sh"
